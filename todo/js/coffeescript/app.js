// Generated by CoffeeScript 1.9.3
(function() {
  $(function() {
    var app;
    app = {};
    app.Todo = Backbone.Model.extend({
      defaults: {
        title: "",
        completed: false
      }
    });
    app.TodoList = Backbone.Collection.extend({
      model: app.Todo,
      localStorage: new Backbone.LocalStorage("backbone-todo")
    });
    app.todoList = new app.TodoList();
    app.TodoView = Backbone.View.extend({
      tagName: "li",
      className: "list-group-item",
      template: _.template($("#item-template").html()),
      initialize: function() {
        this.render();
        this.editing = false;
        this.render2();
        return this.model.on("change", this.render, this);
      },
      render: function() {
        this.$el.html(this.template(this.model.toJSON()));
        this.$input = this.$(".edit");
        return this.$label = this.$(".title");
      },
      render2: function() {
        this.$input.toggle(this.editing);
        return this.$label.toggle(!this.editing);
      },
      events: {
        "dblclick .title": function() {
          this.editing = true;
          this.render2();
          return this.$input.focus();
        },
        "blur     .edit": "close",
        "keypress .edit": "updateOnEnter"
      },
      close: function() {
        var value;
        this.editing = false;
        if (value = this.$input.val().trim()) {
          this.model.save({
            title: value
          });
        } else {
          this.$input.val(this.model.title);
        }
        return this.render2();
      },
      updateOnEnter: function(e) {
        if (e.which === 13) {
          return this.close();
        }
      }
    });
    app.AppView = Backbone.View.extend({
      el: "#todoapp",
      initialize: function() {
        this.input = this.$("#new-todo");
        this.ul = this.$("#todo-list");
        app.todoList.on("add", this.addOne, this);
        return app.todoList.fetch();
      },
      addOne: function(todo) {
        var view;
        view = new app.TodoView({
          model: todo
        });
        return this.ul.append(view.$el);
      },
      events: {
        "keypress #new-todo": "createTodoOnEnter"
      },
      createTodoOnEnter: function(e) {
        if (e.which !== 13 || this.input.val().trim() === "") {
          return;
        }
        app.todoList.create(this.newAttributes());
        return this.input.val("");
      },
      newAttributes: function() {
        return {
          title: this.input.val()
        };
      }
    });
    return app.appView = new app.AppView();
  });

}).call(this);
